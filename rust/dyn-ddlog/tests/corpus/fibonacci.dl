// args: build -Z dump-ast
// expected stdout:
// [
//     Declaration {
//         attributes: [],
//         kind: Relation(
//             Relation {
//                 kind: Input,
//                 name: Ident("FibonacciFor"),
//                 args: [
//                     (
//                         Ident("n"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Relation(
//             Relation {
//                 kind: Internal,
//                 name: Ident("NeedsFibonacci"),
//                 args: [
//                     (
//                         Ident("n"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Rule(
//             Rule {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                 ],
//                 clauses: [
//                     Relation {
//                         binding: None,
//                         relation: Ident("FibonacciFor"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Rule(
//             Rule {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: BinOp(
//                                     Expr {
//                                         kind: Ident("n"),
//                                     },
//                                     Sub,
//                                     Expr {
//                                         kind: Int(1),
//                                     },
//                                 ),
//                             },
//                         ],
//                     },
//                 ],
//                 clauses: [
//                     Relation {
//                         binding: None,
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                     Expr(
//                         Expr {
//                             kind: Cmp(
//                                 Expr {
//                                     kind: Ident("n"),
//                                 },
//                                 GreaterEq,
//                                 Expr {
//                                     kind: Int(1),
//                                 },
//                             ),
//                         },
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Rule(
//             Rule {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: BinOp(
//                                     Expr {
//                                         kind: Ident("n"),
//                                     },
//                                     Sub,
//                                     Expr {
//                                         kind: Int(2),
//                                     },
//                                 ),
//                             },
//                         ],
//                     },
//                 ],
//                 clauses: [
//                     Relation {
//                         binding: None,
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                     Expr(
//                         Expr {
//                             kind: Cmp(
//                                 Expr {
//                                     kind: Ident("n"),
//                                 },
//                                 GreaterEq,
//                                 Expr {
//                                     kind: Int(2),
//                                 },
//                             ),
//                         },
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Relation(
//             Relation {
//                 kind: Internal,
//                 name: Ident("FibonacciLoop"),
//                 args: [
//                     (
//                         Ident("n"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                     (
//                         Ident("fibonacci"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Fact(
//             Fact {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: Int(0),
//                             },
//                             Expr {
//                                 kind: Int(0),
//                             },
//                         ],
//                     },
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Fact(
//             Fact {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: Int(1),
//                             },
//                             Expr {
//                                 kind: Int(1),
//                             },
//                         ],
//                     },
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Rule(
//             Rule {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                             Expr {
//                                 kind: BinOp(
//                                     Expr {
//                                         kind: Ident("fib1"),
//                                     },
//                                     Add,
//                                     Expr {
//                                         kind: Ident("fib2"),
//                                     },
//                                 ),
//                             },
//                         ],
//                     },
//                 ],
//                 clauses: [
//                     Relation {
//                         binding: None,
//                         relation: Ident("NeedsFibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                     Relation {
//                         binding: None,
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: BinOp(
//                                     Expr {
//                                         kind: Ident("n"),
//                                     },
//                                     Sub,
//                                     Expr {
//                                         kind: Int(1),
//                                     },
//                                 ),
//                             },
//                             Expr {
//                                 kind: Ident("fib1"),
//                             },
//                         ],
//                     },
//                     Relation {
//                         binding: None,
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: BinOp(
//                                     Expr {
//                                         kind: Ident("n"),
//                                     },
//                                     Sub,
//                                     Expr {
//                                         kind: Int(2),
//                                     },
//                                 ),
//                             },
//                             Expr {
//                                 kind: Ident("fib2"),
//                             },
//                         ],
//                     },
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Relation(
//             Relation {
//                 kind: Output,
//                 name: Ident("Fibonacci"),
//                 args: [
//                     (
//                         Ident("n"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                     (
//                         Ident("fibonacci"),
//                         BitVec(
//                             32,
//                         ),
//                     ),
//                 ],
//             },
//         ),
//     },
//     Declaration {
//         attributes: [],
//         kind: Rule(
//             Rule {
//                 heads: [
//                     RuleHead {
//                         relation: Ident("Fibonacci"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                             Expr {
//                                 kind: Ident("fib"),
//                             },
//                         ],
//                     },
//                 ],
//                 clauses: [
//                     Relation {
//                         binding: None,
//                         relation: Ident("FibonacciLoop"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                             Expr {
//                                 kind: Ident("fib"),
//                             },
//                         ],
//                     },
//                     Relation {
//                         binding: None,
//                         relation: Ident("FibonacciFor"),
//                         fields: [
//                             Expr {
//                                 kind: Ident("n"),
//                             },
//                         ],
//                     },
//                 ],
//             },
//         ),
//     },
// ]

input relation FibonacciFor(n: bit<32>)

relation NeedsFibonacci(n: bit<32>)
NeedsFibonacci(n) :- FibonacciFor(n).
NeedsFibonacci(n - 1) :- NeedsFibonacci(n), n >= 1.
NeedsFibonacci(n - 2) :- NeedsFibonacci(n), n >= 2.

relation FibonacciLoop(n: bit<32>, fibonacci: bit<32>)
FibonacciLoop(0, 0).
FibonacciLoop(1, 1).
FibonacciLoop(n, fib1 + fib2) :-
    NeedsFibonacci(n),
    FibonacciLoop(n - 1, fib1),
    FibonacciLoop(n - 2, fib2).

output relation Fibonacci(n: bit<32>, fibonacci: bit<32>)
Fibonacci(n, fib) :-
    FibonacciLoop(n, fib),
    FibonacciFor(n).
